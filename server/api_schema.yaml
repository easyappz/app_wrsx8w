openapi: 3.0.0
info:
  title: Photo Rating API
  version: 1.0.0
description: API for rating photos with user points system
servers:
  - url: /api
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: number
                gender:
                  type: string
                username:
                  type: string
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos/upload:
    post:
      summary: Upload a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Photo uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photo:
                    type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos/{photoId}/toggle-active:
    put:
      summary: Toggle photo active status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: photoId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Photo status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photo:
                    type: object
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos/rating:
    get:
      summary: Get photos for rating with filters
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: gender
          schema:
            type: string
        - in: query
          name: minAge
          schema:
            type: number
        - in: query
          name: maxAge
          schema:
            type: number
      responses:
        '200':
          description: Photos retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  photos:
                    type: array
                    items:
                      type: object
        '404':
          description: No photos available
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos/my:
    get:
      summary: Get user's photos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User's photos retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  photos:
                    type: array
                    items:
                      type: object
        '404':
          description: No photos found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos/{photoId}/stats:
    get:
      summary: Get photo stats
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: photoId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Photo stats retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /ratings:
    post:
      summary: Rate a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                rating:
                  type: number
      responses:
        '200':
          description: Rating submitted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /ratings/my:
    get:
      summary: Get user's ratings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User's ratings retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  ratings:
                    type: array
                    items:
                      type: object
        '404':
          description: No ratings found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
